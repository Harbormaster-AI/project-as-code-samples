project:
    name: Angular7 Demo
    description: Sample Angular7 project
    
    techstack:
        name:             Angular7 MongoDB  
        
    model:
        name:             bowling-league-Sprint-1
#
# DevOps Project Options
#    	
    options:

#
# resources: Apply your own resources (files) to a project generation session.  The file name applied
#                must be one that is part of the project generation for the selected tech stack.
# 
#            The name(s) applied here must have been previously published using something like...
#                harbormaster_cli resource_publish ./some_path/Dockerfile my_resource_file_name GENERIC  
#
#            To see the list of available resources on a Harbormaster instance using command:
#                harbormaster_cli resource_list --output pretty            
        resources:        
            available:          myK8AccountCredentials
 
#            
# CI/CD parameters
#            
        cicd:
            platform: codeship    # options:  codeship, circleci, jfrog.pipelines
                                  #           jenkins, azure, aws, gitlab, 
                                  #           bitbucket, github
            AES key:              # codeship project key; ex: XKyy2IDcSptIIvMY8KLMVMcxVs+ZK6AyNu1B4Wu1DPY=
            ssh-fingerprint:   xxxxxxxxxxxxxxxxx     # required by CircleCI for SSH
 
#            
# Application parameters
#                
        application:
            name:                  angular8demo
            description:           Demo Angular8 project generated by Harbormaster
            author:                Dev Team
            email:                 dev@harbormaster.ai
            application logo URL:  ./img/turnstone.biologics.png
            company name:          Turnstone Biologics
            version:               0.0.1
            
            
#            
# Docker parameters
#            
        docker:
            inUse:        true
            userName:     tylertravismya
            password:     69cutlass
            orgName:      xxxxxxxxxx
            repo:         angular8demo
            tag:          latest
            host:         #empty uses docker hubd default            
             
#
# Git repository parameters
#
        git:            
            name:        MyAngularGitHub     # an arbitrary name, but for JFrog, this should be the name of the Git related integration
            username:    complexmathguy 
            password:    00Corvette!!
            repository:  myapp
            tag:         latest
            host:        github.com          

#
# HashiCorp Terraform parameters
#
        terraform:
            inUse:             true	
            provider:          google                   # options: aws, google, azure, nutanix
            region:            us-east-1             # options: any cloud provider region
            
            
#
# AWS parameters
#
        aws:
            key-pair-name:     xxxxxxxxxxxx      
            vpc:               xxxxxxxxxxxxx        
            ec2-instance-type: t2.medium          # options: any AWS instance type
            access-key:        ASSIGN__ON_CICD_PLATFORM_AS_ENV_VARS
            secret-key:        ASSIGN__ON_CICD_PLATFORM_AS_ENV_VARS
            
#
# Google parameters
#
        google:
            inUse:              true
            project:            sharp-footing-218200   # assigned project name
            region:             us-central1            # options: https://cloud.google.com/compute/docs/regions-zones/
            zone:               a                      # options: a,b,c,d,f
            userName:           admin
            password:           5UhfcIPAPsiPXklT       # arbitrary here, not for security purposes
 
#
# Nutanix parameters
#
        nutanix:
            inUse:         false
            userName:      xxxxxxxxxxxxxxxxxxxxxxxxx
            password:      xxxxxxxxxxxxxx
            endpoint:      xxx.xxx.xxx.xxx
            insecure:      true
            port:          xxxxx	
            clusterId:     xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
            email:         dev@harbormaster.ai
            vmUserName:    xxxxxxxxxxx
            vmPassword:    xxxxxxxxxxx
            vmHost:        xxx.xxx.xxx.3xxx
            vmOS:          linux	# options linux, windows - windows not yet supported

#
# Kubernetes parameters: If not in use, and Terraform
#                        is in use, physical infrastructure
#                        will be provisioned on the provider
#
        kubernetes:
            inUse:              true
            host:               35.239.15.32
            hostTarget:         google                 # option: google, aws, azure, nutanix
            exposeAsService:    true
            serviceType:        LoadBalancer           # options: LoadBalancer, NodePort, ClusterIP
            useSessionAffinity: true
            
            
#            
# Artifact repository for build dependencies and store build binaries            
#
        artifact-repo:
            inUse:              false
            type:               jfrog            # options: nexus, jfrog
            userName:           xxxxxxx
            password:           xxxxxxxx
            email:              xxxx.xxxxxx@xxxxxxx.com
            repoUrl:            http://xxx.xxx.xxx.xxx:8081/repository/npm-public

            
#            
#  MongoDB parameters - defaults to a local accessible instance    
#
#  If Terraform is in use, will attempt to instantiate a MongoDB instance via Docker image,
#  and use the instance IP address when binding to client
#  
        mongodb: 
            server address:          localhost:27017
            database name:           angular7demo
            search size:             10
            default collection name: default_collection
            auto-increment id name:  _id
            auto-increment seq name: seq
            mongooseHost:            http://localhost
            mongoosePort:            4000        


